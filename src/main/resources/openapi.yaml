openapi: 3.0.3
info:
  title: Manage clients
  description: :)
  version: 1.0.0
servers:
  - url: /api/v1
    description: Generated server url

paths:
   /clients:
    get:
      summary: 'Get all clients'
      description: 'Get a list of all clients stored in the system'
      operationId: getAllClients
      tags:
        - Clients
      responses:
        '200':
          description: 'All clients are returned'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClientResponseDto'

    post:
      summary: 'Create a new client'
      description: 'Create a new client using ClientRequestDto'
      operationId: saveClient
      tags:
        - Clients
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientRequestDto'
        required: true
      responses:
        '201':
          description: 'Client has been created successfully'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientResponseDto'


   /clients/{clientId}:
    get:
      summary: 'Get a single client'
      description: 'Get a client by its id'
      operationId: getClient
      tags:
        - Clients
      parameters:
        - in: path
          name: clientId
          schema:
            $ref: '#/components/schemas/UUID'
          required: true
          description: 'Client id'
      responses:
        '200':
          description: 'Client information is returned'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientResponseDto'

    put:
      summary: 'Update a client'
      description: 'Update an existing client by its id using ClientRequestDto'
      operationId: updateClient
      tags:
        - Clients
      parameters:
        - in: path
          name: clientId
          schema:
            $ref: '#/components/schemas/UUID'
          required: true
          description: 'Client id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientRequestDto'
        required: true
      responses:
        '200':
          description: 'Client has been updated successfully'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientResponseDto'

    delete:
      summary: 'Delete a client'
      description: 'Delete an existing client by its id'
      operationId: deleteClient
      tags:
        - Clients
      parameters:
        - in: path
          name: clientId
          schema:
            $ref: '#/components/schemas/UUID'
          required: true
          description: 'Client id'
      responses:
        '200':
          description: 'Client has been deleted successfully'




security:
  - bearerAuth: [ ]

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      in: header
      name: Authorization

  schemas:
    ClientRequestDto:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          description: 'Email address'
          example: 'examplemail@gmail.com'
          pattern: '^[A-Za-z0-9._-]+@[A-Za-z0-9.-]+\.[A-Za-z]{1,}$'
          x-pattern-message: 'Invalid email'
          minLength: 7
          maxLength: 50
      required:
        - lastName
        - firstName
        - email

    ClientResponseDto:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UUID'
        lastName:
          type: string
        firstName:
          type: string
        email:
          type: string


    UUID:
      type: string
      description: 'Universal Unique Identifier'
      pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
      example: 'c7b7c414-99be-11ee-b9d1-0242ac120002'

    ApplicationExceptionResponseDto:
      type: object
      properties:
        statusCode:
          type: integer
          description: 'Response status code'
          example: '400'
        message:
          type: string
          description: 'Code message'
          example: 'Bad Request'
        exceptionMessage:
          type: string
          description: 'Exception message'
          example: 'Message'
        timestamp:
          type: string
          format: date-time
          description: 'Date and time'
          example: '2020-01-01T00:00:00Z'
